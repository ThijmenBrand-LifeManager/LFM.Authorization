- job: Build
  displayName: "Build the project"

  pool:
    name: Azure Pipelines
    vmImage: "ubuntu-latest"

  variables:
    ? ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}
    : isMain: true
      buildConfiguration: "Release"
      packageVersion: $(Build.BuildNumber).0
    ? ${{ if not(or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))) }}
    : isMain: false
      buildConfiguration: "Release"
      packageVersion: $(Build.BuildNumber).0-preview

  steps:
    - bash: |
        echo 'Build configuration: ${{ variables.buildConfiguration }}'
        echo 'Package version: ${{ variables.packageVersion }}'

    - task: DotNetCoreCLI@2
      displayName: "Restore NuGet packages"
      inputs:
        command: "restore"
        projects: "**/*.csproj"
        feedRestore: "407d6065-8587-4ac8-ae70-2cd6113344f6/33514246-42b5-4e00-ae05-c44e6f65cb0e"

    - task: DotNetCoreCLI@2
      displayName: "Build the project"
      inputs:
        command: "build"
        projects: "**/*.csproj"
        arguments: "--no-restore --configuration $(buildConfiguration)"
        outputDir: "$(Build.ArtifactStagingDirectory)/build"

    - task: DotNetCoreCLI@2
      displayName: NuGet pack
      inputs:
        command: "custom"
        projects: |
          **/LFM.Authorization.AspNetCore.csproj
        custom: "pack"
        arguments: "--output $(Build.ArtifactStagingDirectory) -p:PackageVersion=${{variables.packageVersion}} -p:Configuration=$(buildConfiguration)"

    - task: DotNetCoreCLI@2
      displayName: "NuGet Push"
      inputs:
        command: push
        searchPatternPush: "$(Build.ArtifactStagingDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.Tests.nupkg"
        publishVstsFeed: "407d6065-8587-4ac8-ae70-2cd6113344f6/33514246-42b5-4e00-ae05-c44e6f65cb0e"
