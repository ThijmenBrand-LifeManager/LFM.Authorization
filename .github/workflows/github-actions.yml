name: Build and deploy LFM.Authorization

env:
  GITHUB_NAMESPACE: ThijmenBrand-LifeManager
  GITHUB_USERNAME: ThijmenBrand
  BUILD_CONFIGURATION: Release
  SOLUTION_FILE: LFM.Authorization/LFM.Authorization.sln

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      Version: ${{ steps.set_version.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set version
        id: set_version
        run: |
          echo "version=$(date +'%Y.%m.%d').$(echo $GITHUB_RUN_NUMBER | cut -c1-7)" >> "$GITHUB_OUTPUT"

      #restore nuget packages from github package registry
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Add GitHub NuGet package registry
        run: dotnet nuget add source https://nuget.pkg.github.com/$GITHUB_NAMESPACE/index.json --name github --username $GITHUB_USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

      - name: Restore NuGet packages
        run: dotnet restore $SOLUTION_FILE

      #build the project
      - name: Build the project
        run: dotnet build $SOLUTION_FILE --no-restore --configuration $BUILD_CONFIGURATION

      #pack the project
      - name: NuGet pack
        run: dotnet pack "LFM.Authorization/LFM.Authorization.AspNetCore/LFM.Authorization.AspNetCore.csproj" ./nupkg -p:PackageVersion=${{ steps.set_version.outputs.version }} -p:Configuration=$BUILD_CONFIGURATION

      - name: Upload NuGet package to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: nugetPackage
          path: ./nupkg

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download nuget package artifact
        uses: actions/download-artifact@v4
        with:
          name: nugetPackage

      - name: Prep packages
        run: dotnet nuget add source https://nuget.pkg.github.com/$GITHUB_NAMESPACE/index.json --name github --username $GITHUB_USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

      - name: Push packages
        run: dotnet nuget push nugetPackage/*.nupkg --source github --api-key ${{ secrets.GITHUB_TOKEN }}
